Задание 1. Расписать в текстовом документе зачем нужны интерфейсы и их отличие от классов.

Самое главное отличие в том, что класс состоит из интерфейса и реализации.

Интерфейс дает большие возможности, нежели класс, который при простом наследовании передаст и свою реализацию, что
не всегда нужно для решения задачи. Интерфейс содержит в себе спецификацию, вместо реализации.

Так же интерфейс может задать общий признак для разнородных объектов. В таком случае нам нет нужды прописывать набор признаков для каждого объекта.
Мы просто реализуем для них общий интерфейс.

Все таки не углубляясь в гугл, скажу так: интерфейс, как и многое из части MVC, что мы изучим, позволит нам:

	*разделять зоны ответственности;
	*укоротить сам код, не дублируя подобные классы до бесконечности;
	*научиться соблюдать конвенцию;
	*пользоваться всеми возможностями языка для оптимизации процесса;
	*изучить паттерн в целом, начиная с малых его частей;

В данном ДЗ мы создадим интерфейс для объединения логики работы различных бонусов.
Без использования интерфейса или SO, мы бы создали 10 различных префабов, увеличив вес проекта. На каждый префаб мы бы повесили свой скрипт,
продублировав в очередной раз 50 строк подобного кода. Создали бы 10 стартов и 10 апдэйтов. В рамках учебного проекта - это капля в море.
В рамках игры - объектов будет не 10, а 1000. 

Я использую интерфейсы для создания логики двух видов бонусов - те, которые нужно собрать и "запомнить" для дальнейшего прогресса и те,
которые будут увеличивать те или иные параметры.

Задание 2. Расписать в текстовом документе зачем нужны обобщения и привести несколько примеров их использования

Обобщение, простым языком, позволит создать некий шаблон, применимый к разным типам данных.

Моим примером использования является сохранение игрового прогресса по сбору бонусов. 

Обобщения можно наследовать. Так же они увеличивают производительность тем, что при использовании стандартного преобразования идет процесс boxing и 
unboxing.





